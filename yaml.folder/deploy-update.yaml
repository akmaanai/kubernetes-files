apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "14"
      meta.helm.sh/release-name: dd-ticket
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2021-12-16T11:14:46Z"
    generation: 14
    labels:
      app.kubernetes.io/component: cluster-agent
      app.kubernetes.io/instance: dd-ticket
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dd-ticket-datadog
      app.kubernetes.io/version: "7"
      helm.sh/chart: datadog-2.27.8
    name: dd-ticket-datadog-cluster-agent
    namespace: default
    resourceVersion: "1190541"
    uid: 715e6a59-85a9-4f68-ac7c-cd7bfd294348
  spec:
    securityContext:
      runAsUser: 10000
      priveleged: false
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: dd-ticket-datadog-cluster-agent
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/api_key: 2ce593bad64e1647d47390b272accd0e730adda9ffd654658eff4bf260a5a3f3
          checksum/application_key: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          checksum/clusteragent_token: 6c8f15a6a915a698f68706e3d873cea5668fb0a2825d816dd9f27b5db8d7a884
          checksum/install_info: 268f1ad88131250e049e41021ca2a2ec57a2db509c8f0c3a2da23fc22a11af77
        creationTimestamp: null
        labels:
          app: dd-ticket-datadog-cluster-agent
          app.kubernetes.io/component: cluster-agent
          app.kubernetes.io/instance: dd-ticket
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: dd-ticket-datadog
        name: dd-ticket-datadog-cluster-agent
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: dd-ticket-datadog-cluster-agent
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: DD_HEALTH_PORT
            value: "5556"
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: dd-ticket-datadog
                optional: true
          - name: DD_CLUSTER_CHECKS_ENABLED
            value: "true"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: kube_endpoints kube_services
          - name: DD_EXTRA_LISTENERS
            value: kube_endpoints kube_services
          - name: DD_LOG_LEVEL
            value: INFO
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: dd-ticket-datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: dd-ticket-datadog-cluster-agent
          - name: DD_KUBE_RESOURCES_NAMESPACE
            value: default
          - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
            value: "true"
          - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
            value: "true"
          image: gcr.io/datadoghq/cluster-agent:1.16.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5556
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: cluster-agent
          ports:
          - containerPort: 5005
            name: agentport
            protocol: TCP
          - containerPort: 5000
            name: agentmetrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5556
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/datadog-agent/install_info
            name: installinfo
            readOnly: true
            subPath: install_info
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: dd-ticket-datadog-cluster-agent
        serviceAccountName: dd-ticket-datadog-cluster-agent
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: dd-ticket-datadog-installinfo
          name: installinfo
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-12-16T11:15:33Z"
      lastUpdateTime: "2021-12-16T11:15:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-12-16T11:14:46Z"
      lastUpdateTime: "2021-12-18T15:28:11Z"
      message: ReplicaSet "dd-ticket-datadog-cluster-agent-745f5b7d99" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 14
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: dd-ticket
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2021-12-16T11:14:46Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: dd-ticket
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/version: 1.9.8
      helm.sh/chart: kube-state-metrics-2.13.2
    name: dd-ticket-kube-state-metrics
    namespace: default
    resourceVersion: "25247"
    uid: 86835e5b-7d82-4c7c-b1bc-19409202d640
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: dd-ticket
          app.kubernetes.io/name: kube-state-metrics
      spec:
        containers:
        - args:
          - --collectors=certificatesigningrequests
          - --collectors=configmaps
          - --collectors=cronjobs
          - --collectors=daemonsets
          - --collectors=deployments
          - --collectors=endpoints
          - --collectors=horizontalpodautoscalers
          - --collectors=ingresses
          - --collectors=jobs
          - --collectors=limitranges
          - --collectors=mutatingwebhookconfigurations
          - --collectors=namespaces
          - --collectors=networkpolicies
          - --collectors=nodes
          - --collectors=persistentvolumeclaims
          - --collectors=persistentvolumes
          - --collectors=poddisruptionbudgets
          - --collectors=pods
          - --collectors=replicasets
          - --collectors=replicationcontrollers
          - --collectors=resourcequotas
          - --collectors=secrets
          - --collectors=services
          - --collectors=statefulsets
          - --collectors=storageclasses
          - --collectors=validatingwebhookconfigurations
          - --collectors=volumeattachments
          - --telemetry-port=8081
          image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v1.9.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsUser: 65534
        serviceAccount: dd-ticket-kube-state-metrics
        serviceAccountName: dd-ticket-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-12-16T11:14:58Z"
      lastUpdateTime: "2021-12-16T11:14:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-12-16T11:14:46Z"
      lastUpdateTime: "2021-12-16T11:14:58Z"
      message: ReplicaSet "dd-ticket-kube-state-metrics-dd568bc6b" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
